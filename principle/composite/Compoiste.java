package cn.edu.designpattern.principle.composite;

public class Compoiste {
    // 尽量使用合成和聚合的方式 而不是使用继承
    // 如果只想要 B类中使用A类中的方法，使用继承就会使程序之间的耦合性提高
    //  B类中将A类对象当做参数传入 就是简单的依赖 B类中将A类对象使用set方法注入就是聚合
    // 使用构造函数来创建就是组合 这三种方式是has a  而继承的方式 是is a

    // 设计原则的核心思想：就是将变化的部分拿出来 不要将不变的部分和变化的部分混起来
    // 面向接口编程 而不是面向实现编程
    // 为了交互对象间的松耦合而努力（就是抽象的部分是稳定的）

}
