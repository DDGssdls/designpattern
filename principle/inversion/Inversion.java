package cn.edu.designpattern.principle.inversion;

public class Inversion {
    // 依赖倒转的原则的注意细节：1底层的模块都要有抽闲类或者是接口 或者是两者都有，这样是程序的稳定性更好
    // 变量的声明尽量是抽象类或者是接口，这样变量和实际的引用之间存在着缓冲区，利于程序的扩展和优化。
    // 继承时遵循里氏替换原则
    //  细节依赖的抽象
    // 依赖传递的三种方式： 使用构造器传递 使用的setter方法进行传递 在参数中使用接口进行传递
}
